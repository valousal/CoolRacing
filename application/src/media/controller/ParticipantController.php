<?phpnamespace media\controller ;use \media\view ;/****************************** GUZZLE *******************************/use GuzzleHttp\Client; //Guzzle init - Obligatoireuse GuzzleHttp\EntityBody; //Recuperation Body reponse use GuzzleHttp\Event\CompleteEvent; //Requete parrallèle (voir docs)use GuzzleHttp\Exception\RequestException; //Exception GUzzleclass ParticipantController extends AbstractController{	private $client;	public function __construct(){		if (isset($_SESSION['accessToken'])){			$this->client = new Client([			    'base_url' => 'http://coolracing/service/api/',			    'defaults' => [			        //'headers' => ['Foo' => 'Bar'],			        'query'   => ['accessToken' => $_SESSION['accessToken'],'client_access_token' => '209592932550acf353b2528.70564490']			        //'auth'    => ['username', 'password'],			        //'proxy'   => 'tcp://localhost:80'			    ]			]);		}else{			$this->client = new Client([			    'base_url' => 'http://coolracing/service/api/',			    'defaults' => [			        //'headers' => ['Foo' => 'Bar'],			        'query'   => ['accessToken' => null,'client_access_token' => '209592932550acf353b2528.70564490']			        //'auth'    => ['username', 'password'],			        //'proxy'   => 'tcp://localhost:80'			    ]			]);		}	}		public function profil(){		$response = $this->client->get("participants/".$_SESSION['id'].""); 		$body = $response->getBody();		if ($response->getStatusCode() == "200"){ //si la ressource existe bien			$body = json_decode($body, true);			//pour l'instant l'API renvoit uniquement un tableau, pas de liens, donc $body correspond au participant			$participant = $body;			//récupérer les évènements liés au participant			/*Comme ça? Ou créer une nouvelle vu, faire un block de template a inclure dans le template participan????*/			$response = $this->client->get("participants/".$_SESSION['id']."/evenements"); 			if ($response->getStatusCode() == "200"){				$body = $response->getBody();				$body = json_decode($body, true);				$evenements = $body;			}else{				//mettre un truk par defaut dans les variables?			}			$v = new view\ViewProfilParticipant($participant,$evenements);			$v->display();		}else{			$message = "Problèmes, veuillez nous contacter";		    $v = new view\ViewError($message);			$v->display();		}	}	public function signup(){		$v = new view\ViewFormSignupParticipants();		$v->display();	}	public function signupTraitement(){		$app = \Slim\Slim::getInstance();		if ((!empty($_POST['prenom'])) && (!empty($_POST['nom'])) && (!empty( $_POST['sexe']))&& (!empty( $_POST['login']))&& (!empty( $_POST['password']))&& (!empty( $_POST['mailPrivate']))&& (!empty($_POST['dateNaissance']))){ //si les variables existent			try{				$response = $this->client->post("participants/", [					'json' => [						'prenom' => $_POST['prenom'],						'nom' => $_POST['nom'],						'sexe' => $_POST['sexe'],						'login' => $_POST['login'],						'password' => $_POST['password'],						'mailPrivate' => $_POST['mailPrivate'],						'dateNaissance' => $_POST['dateNaissance'],						'tel' => $_POST['tel'],						'mailPub' => $_POST['mailPub'],						'adresse' => [							'num' => $_POST['num'],							'type' => $_POST['type'],							'CP' => $_POST['CP'],							'ville' => $_POST['ville'],							'rue' => $_POST['rue'],						]					]				]);			$app->response->redirect($app->urlFor('accueil'));			} catch (RequestException $e) {			    echo $e->getRequest() . "\n";			}				}else{			$message = "Champs incomplet(s) et/ou invalide(s)";		    $v = new view\ViewFormSignupParticipants($message);			$v->display();		}	}	public function update(){		try{ //si la ressource existe bien			$response = $this->client->get("participants/".$_SESSION['id']); 			$body = $response->getBody();			$body = json_decode($body, true);			$infoPart = $body;			$v = new view\ViewFormModifParticipants($infoPart);			$v->display();		}catch (RequestException $e) {			$message = "Problèmes, veuillez nous contacter";		    $v = new view\ViewError($message);			$v->display();		}	}	public function updateTraitement(){		$app = \Slim\Slim::getInstance();		if ((!empty($_POST['prenom'])) && (!empty($_POST['nom'])) && (!empty( $_POST['sexe']))&& (!empty( $_POST['password']))&& (!empty( $_POST['mailPrivate']))&& (!empty($_POST['dateNaissance']))){ //si les variables existent			try{				$response = $this->client->put("participants/".$_SESSION['id'], [					'json' => [						'prenom' => $_POST['prenom'],						'nom' => $_POST['nom'],						'sexe' => $_POST['sexe'],						//'login' => $_POST['login'],						'password' => $_POST['password'],						'mailPrivate' => $_POST['mailPrivate'],						'dateNaissance' => $_POST['dateNaissance'],						'tel' => $_POST['tel'],						'mailPub' => $_POST['mailPub'],						'adresse' => [							'num' => $_POST['num'],							'type' => $_POST['type'],							'CP' => $_POST['CP'],							'ville' => $_POST['ville'],							'rue' => $_POST['rue'],						]					]				]);			$app->response->redirect($app->urlFor('profil_participant'));			} catch (RequestException $e) {			    echo $e->getRequest() . "\n";			     if ($e->hasResponse()) {        			echo $e->getResponse();    			}			}				}else{			$message = "Champs incomplets";		    $v = new view\ViewError($message);			$v->display();		}	}	public function evenementPart(){		$response = $this->client->get("participants/".$_SESSION['id']."/evenements"); 		try{			$body = $response->getBody();			$body = json_decode($body, true);			$evenements = $body;			$v = new view\ViewEvenementsParticipant($evenements);			$v->display();		}catch (RequestException $e) {		    $message = "Problèmes, veuillez nous contacter";		    $v = new view\ViewError($message);			$v->display();		}	}	}